{"version":3,"file":"static/js/377.b45398f4.chunk.js","mappings":"8OAeA,EAbwB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnC,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UACxB,OACE,gBAAIL,KAAMA,EAAV,WACE,uBAAIA,KACJ,uBAAIC,KACJ,mBAAQK,KAAK,SAASC,QAAS,kBAAMJ,EAAcJ,IAAnD,SACGK,EAAa,cAAgB,eCGtC,EAVoB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACrB,OACE,wBACGA,EAASC,KAAI,SAAAD,GAAQ,OACpB,SAAC,GAAD,UAAuCA,GAAjBA,EAAST,UCH1BW,EAAO,WAClB,OAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBP,EAAxB,KAAwBA,UACxB,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAec,EAAf,KAEMC,EAAc,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACd,OAAQnB,GACN,IAAK,OACHc,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAUAC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,kBAAMM,SAZa,SAAAJ,GACnBA,EAAEK,iBACFV,EAAc,CAAEZ,KAAMA,EAAMC,OAAQA,IACpCmB,KASA,WACE,qCAEE,kBACEd,KAAK,OACLa,MAAOnB,EACPuB,SAAUP,EACVhB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEpB,KAAK,MACLa,MAAOlB,EACPsB,SAAUP,EACVhB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,oBAAQpB,KAAK,SAASqB,SAAUtB,EAAhC,UACGA,GAAa,SADhB,qB,oBC1CN,EAfe,WACb,IAAMuB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,uCAEE,kBAAOvB,KAAK,OAAOiB,SAPF,SAAAN,GACnBW,GAASE,EAAAA,EAAAA,IAAcb,EAAEC,cAAcC,eCqB3C,EAvBkB,WAChB,IAAcX,GAAauB,EAAAA,EAAAA,MAAnBC,KACFC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,UAU1C,OACE,4BACE,uCACA,SAACvB,EAAD,KACA,sCACA,SAAC,EAAD,IACCF,IAAY,SAAC,EAAD,CAAaA,SAdF,WAC1B,IAAM4B,EAAmBH,EAAOI,cAEhC,OADAC,QAAQC,IAAI/B,GACLA,EAASyB,QAAO,SAAAO,GAAC,OACtBA,EAAExC,KAAKqC,cAAcI,SAASL,MAUMM,SCjB1C,EAJqB,WACnB,OAAO,SAAC,EAAD","sources":["components/ContactListItem.js","components/ContactList.js","components/Form.js","components/Filter.js","components/phonebook.js","pages/ContactsPage.js"],"sourcesContent":["import { useDeleteContactMutation } from 'redux/slice/contactsSlice';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <li name={name}>\n      <p>{name}</p>\n      <p>{number}</p>\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      {contacts.map(contacts => (\n        <ContactListItem key={contacts.id} {...contacts} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\n// import React from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import contactsAction from '../redux/contacts/contacts-actions';\n// import { getVisibleContacts } from '../redux/contacts/contacts-selectors';\n\n// const ContactList = () => {\n//   const contacts = useSelector(getVisibleContacts);\n//   const dispatch = useDispatch();\n\n//   const onDeleteContact = id => dispatch(contactsAction.deleteContact(id));\n\n//   return (\n//     <ul>\n//       {contacts.map(contacts => (\n//         <li key={contacts.id} name={contacts.name}>\n//           <p>{contacts.name}</p>\n//           <p>{contacts.number}</p>\n//           <button type=\"button\" onClick={() => onDeleteContact(contacts.id)}>\n//             Delete\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// export default ContactList;\n","import { useCreateContactMutation } from 'redux/slice/contactsSlice';\nimport { useState } from 'react';\n\nexport const Form = () => {\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submitNumber = e => {\n    e.preventDefault();\n    createContact({ name: name, number: number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={submitNumber}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          onChange={inputChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          value={number}\n          onChange={inputChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading && 'Add...'}\n        Add contact\n      </button>\n    </form>\n  );\n};\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import contactsAction from 'redux/contacts/contacts-actions';\n\n// export default function Form() {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const dispatch = useDispatch();\n\n//   const inputChange = e => {\n//     const { name, value } = e.currentTarget;\n//     switch (name) {\n//       case 'name':\n//         setName(value);\n//         break;\n\n//       case 'number':\n//         setNumber(value);\n//         break;\n//       default:\n//         return;\n//     }\n//   };\n\n//   const submitNumber = e => {\n//     e.preventDefault();\n//     dispatch(contactsAction.addContact({ name, number }));\n//     reset();\n//   };\n\n//   const reset = () => {\n//     setName('');\n//     setNumber('');\n//   };\n\n//   return (\n//     <form onSubmit={submitNumber}>\n//       <label>\n//         Name\n//         <input\n//           type=\"text\"\n//           value={name}\n//           onChange={inputChange}\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//       </label>\n//       <label>\n//         Number\n//         <input\n//           type=\"tel\"\n//           value={number}\n//           onChange={inputChange}\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//       </label>\n\n//       <button type=\"submit\">Add contact</button>\n//     </form>\n//   );\n// }\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/slice/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterChange = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  return (\n    <label>\n      Filter\n      <input type=\"text\" onChange={filterChange}></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useFetchContactsQuery } from 'redux/slice/contactsSlice';\nimport ContactList from './ContactList';\nimport { Form } from './Form';\nimport Filter from './Filter';\nimport { useSelector } from 'react-redux';\n\nconst Phonebook = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(state => state.filter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log(contacts);\n    return contacts.filter(c =>\n      c.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {contacts && <ContactList contacts={getFilteredContacts()} />}\n    </div>\n  );\n};\n\nexport default Phonebook;\n\n// import { useState } from 'react';\n// import Form from './Form';\n// import ContactList from './ContactList';\n// import { nanoid } from 'nanoid';\n// import Filter from './Filter';\n// import { useDispatch } from 'react-redux';\n// import contactsAction from 'redux/contacts/contacts-actions';\n//\n// export default function Phonebook() {\n//   const [contacts, setContacts] = useState([]);\n//   // () => {\n//   // return JSON.parse(window.localStorage.getItem('contacts')) ?? [];}\n\n//   const [filter, setFilter] = useState('');\n//   const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n//   // }, [contacts]);\n\n//   const formSubmit = data => {\n//     const contact = {\n//       id: nanoid(),\n//       name: data.name,\n//       number: data.number,\n//     };\n//     console.log(contact);\n\n//     if (\n//       contacts.some(item => item.name.toLowerCase() === data.name.toLowerCase())\n//     ) {\n//       alert('This name is olready in contact');\n//       return;\n//     }\n//     dispatch(contactsAction.addContact(contact));\n//     setContacts(prevState => [contact, ...prevState]);\n//   };\n\n//   const changeFilter = e => {\n//     setFilter(e.currentTarget.value);\n//   };\n\n//   // const getFilteredContacts = () => {\n//   //   const normalizedFilter = filter.toLowerCase();\n//   //   return contacts.filter(c =>\n//   //     c.name.toLowerCase().includes(normalizedFilter)\n//   //   );\n//   // };\n\n//   // const deleteContact = contactId => {\n//   //   setContacts(prevState => prevState.filter(c => c.id !== contactId));\n//   // };\n\n//   return (\n//     <div>\n//       <h1>Phonebook</h1>\n//       <Form onSubmit={formSubmit} />\n//       <h2>Contacts</h2>\n//       <Filter value={filter} onChange={changeFilter} />\n//       <ContactList\n//       // contacts={getFilteredContacts()}\n//       // onDeleteContact={deleteContact}\n//       />\n//     </div>\n//   );\n// }\n","import React from 'react';\nimport Phonebook from 'components/phonebook';\n\nconst ContactsPage = () => {\n  return <Phonebook />;\n};\n\nexport default ContactsPage;\n"],"names":["id","name","number","useDeleteContactMutation","deleteContact","isDeleting","isLoading","type","onClick","contacts","map","Form","useCreateContactMutation","createContact","useState","setName","setNumber","inputChange","e","currentTarget","value","reset","onSubmit","preventDefault","onChange","pattern","title","required","disabled","dispatch","useDispatch","filterContact","useFetchContactsQuery","data","filter","useSelector","state","normalizedFilter","toLowerCase","console","log","c","includes","getFilteredContacts"],"sourceRoot":""}